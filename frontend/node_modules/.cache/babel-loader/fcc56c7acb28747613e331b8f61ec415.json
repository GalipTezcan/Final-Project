{"ast":null,"code":"import { __privateAdd, __privateGet, __privateSet } from \"./chunk-PXG64RU4.js\";\n\n// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar _queries;\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    __privateAdd(this, _queries);\n    __privateSet(this, _queries, /* @__PURE__ */new Map());\n  }\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!__privateGet(this, _queries).has(query.queryHash)) {\n      __privateGet(this, _queries).set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = __privateGet(this, _queries).get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        __privateGet(this, _queries).delete(query.queryHash);\n      }\n      this.notify({\n        type: \"removed\",\n        query\n      });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return __privateGet(this, _queries).get(queryHash);\n  }\n  getAll() {\n    return [...__privateGet(this, _queries).values()];\n  }\n  find(filters) {\n    const defaultedFilters = {\n      exact: true,\n      ...filters\n    };\n    return this.getAll().find(query => matchQuery(defaultedFilters, query));\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter(query => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n};\n_queries = new WeakMap();\nexport { QueryCache };","map":{"version":3,"names":["__privateAdd","__privateGet","__privateSet","hashQueryKeyByOptions","matchQuery","Query","notifyManager","Subscribable","_queries","QueryCache","constructor","config","Map","build","client","options","state","queryKey","queryHash","query","get","defaultQueryOptions","defaultOptions","getQueryDefaults","add","has","set","notify","type","remove","queryInMap","destroy","delete","clear","batch","getAll","forEach","values","find","filters","defaultedFilters","exact","findAll","queries","Object","keys","length","filter","event","listeners","listener","onFocus","onOnline","WeakMap"],"sources":["/Users/bts-ank-0608/Final-Project/frontend/node_modules/@tanstack/query-core/build/legacy/queryCache.js"],"sourcesContent":["import {\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-PXG64RU4.js\";\n\n// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar _queries;\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    __privateAdd(this, _queries);\n    __privateSet(this, _queries, /* @__PURE__ */ new Map());\n  }\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!__privateGet(this, _queries).has(query.queryHash)) {\n      __privateGet(this, _queries).set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = __privateGet(this, _queries).get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        __privateGet(this, _queries).delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return __privateGet(this, _queries).get(queryHash);\n  }\n  getAll() {\n    return [...__privateGet(this, _queries).values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\n_queries = new WeakMap();\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}