{"ast":null,"code":"import { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-PXG64RU4.js\";\n\n// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar _client, _currentResult, _currentMutation, _mutateOptions, _MutationObserver_instances, updateResult_fn, notify_fn;\nvar MutationObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    __privateAdd(this, _MutationObserver_instances);\n    __privateAdd(this, _client);\n    __privateAdd(this, _currentResult);\n    __privateAdd(this, _currentMutation);\n    __privateAdd(this, _mutateOptions);\n    __privateSet(this, _client, client);\n    this.setOptions(options);\n    this.bindMethods();\n    __privateMethod(this, _MutationObserver_instances, updateResult_fn).call(this);\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    var _a;\n    const prevOptions = this.options;\n    this.options = __privateGet(this, _client).defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      __privateGet(this, _client).getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: __privateGet(this, _currentMutation),\n        observer: this\n      });\n    }\n    if ((prevOptions == null ? void 0 : prevOptions.mutationKey) && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (((_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.state.status) === \"pending\") {\n      __privateGet(this, _currentMutation).setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    var _a;\n    if (!this.hasListeners()) {\n      (_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    __privateMethod(this, _MutationObserver_instances, updateResult_fn).call(this);\n    __privateMethod(this, _MutationObserver_instances, notify_fn).call(this, action);\n  }\n  getCurrentResult() {\n    return __privateGet(this, _currentResult);\n  }\n  reset() {\n    var _a;\n    (_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.removeObserver(this);\n    __privateSet(this, _currentMutation, void 0);\n    __privateMethod(this, _MutationObserver_instances, updateResult_fn).call(this);\n    __privateMethod(this, _MutationObserver_instances, notify_fn).call(this);\n  }\n  mutate(variables, options) {\n    var _a;\n    __privateSet(this, _mutateOptions, options);\n    (_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.removeObserver(this);\n    __privateSet(this, _currentMutation, __privateGet(this, _client).getMutationCache().build(__privateGet(this, _client), this.options));\n    __privateGet(this, _currentMutation).addObserver(this);\n    return __privateGet(this, _currentMutation).execute(variables);\n  }\n};\n_client = new WeakMap();\n_currentResult = new WeakMap();\n_currentMutation = new WeakMap();\n_mutateOptions = new WeakMap();\n_MutationObserver_instances = new WeakSet();\nupdateResult_fn = function () {\n  var _a;\n  const state = ((_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.state) ?? getDefaultState();\n  __privateSet(this, _currentResult, {\n    ...state,\n    isPending: state.status === \"pending\",\n    isSuccess: state.status === \"success\",\n    isError: state.status === \"error\",\n    isIdle: state.status === \"idle\",\n    mutate: this.mutate,\n    reset: this.reset\n  });\n};\nnotify_fn = function (action) {\n  notifyManager.batch(() => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    if (__privateGet(this, _mutateOptions) && this.hasListeners()) {\n      const variables = __privateGet(this, _currentResult).variables;\n      const context = __privateGet(this, _currentResult).context;\n      if ((action == null ? void 0 : action.type) === \"success\") {\n        (_b = (_a = __privateGet(this, _mutateOptions)).onSuccess) == null ? void 0 : _b.call(_a, action.data, variables, context);\n        (_d = (_c = __privateGet(this, _mutateOptions)).onSettled) == null ? void 0 : _d.call(_c, action.data, null, variables, context);\n      } else if ((action == null ? void 0 : action.type) === \"error\") {\n        (_f = (_e = __privateGet(this, _mutateOptions)).onError) == null ? void 0 : _f.call(_e, action.error, variables, context);\n        (_h = (_g = __privateGet(this, _mutateOptions)).onSettled) == null ? void 0 : _h.call(_g, void 0, action.error, variables, context);\n      }\n    }\n    this.listeners.forEach(listener => {\n      listener(__privateGet(this, _currentResult));\n    });\n  });\n};\nexport { MutationObserver };","map":{"version":3,"names":["__privateAdd","__privateGet","__privateMethod","__privateSet","getDefaultState","notifyManager","Subscribable","hashKey","shallowEqualObjects","_client","_currentResult","_currentMutation","_mutateOptions","_MutationObserver_instances","updateResult_fn","notify_fn","MutationObserver","constructor","client","options","setOptions","bindMethods","call","mutate","bind","reset","_a","prevOptions","defaultMutationOptions","getMutationCache","notify","type","mutation","observer","mutationKey","state","status","onUnsubscribe","hasListeners","removeObserver","onMutationUpdate","action","getCurrentResult","variables","build","addObserver","execute","WeakMap","WeakSet","isPending","isSuccess","isError","isIdle","batch","_b","_c","_d","_e","_f","_g","_h","context","onSuccess","data","onSettled","onError","error","listeners","forEach","listener"],"sources":["/Users/bts-ank-0608/Final-Project/frontend/node_modules/@tanstack/query-core/build/legacy/mutationObserver.js"],"sourcesContent":["import {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-PXG64RU4.js\";\n\n// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar _client, _currentResult, _currentMutation, _mutateOptions, _MutationObserver_instances, updateResult_fn, notify_fn;\nvar MutationObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    __privateAdd(this, _MutationObserver_instances);\n    __privateAdd(this, _client);\n    __privateAdd(this, _currentResult);\n    __privateAdd(this, _currentMutation);\n    __privateAdd(this, _mutateOptions);\n    __privateSet(this, _client, client);\n    this.setOptions(options);\n    this.bindMethods();\n    __privateMethod(this, _MutationObserver_instances, updateResult_fn).call(this);\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    var _a;\n    const prevOptions = this.options;\n    this.options = __privateGet(this, _client).defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      __privateGet(this, _client).getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: __privateGet(this, _currentMutation),\n        observer: this\n      });\n    }\n    if ((prevOptions == null ? void 0 : prevOptions.mutationKey) && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (((_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.state.status) === \"pending\") {\n      __privateGet(this, _currentMutation).setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    var _a;\n    if (!this.hasListeners()) {\n      (_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    __privateMethod(this, _MutationObserver_instances, updateResult_fn).call(this);\n    __privateMethod(this, _MutationObserver_instances, notify_fn).call(this, action);\n  }\n  getCurrentResult() {\n    return __privateGet(this, _currentResult);\n  }\n  reset() {\n    var _a;\n    (_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.removeObserver(this);\n    __privateSet(this, _currentMutation, void 0);\n    __privateMethod(this, _MutationObserver_instances, updateResult_fn).call(this);\n    __privateMethod(this, _MutationObserver_instances, notify_fn).call(this);\n  }\n  mutate(variables, options) {\n    var _a;\n    __privateSet(this, _mutateOptions, options);\n    (_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.removeObserver(this);\n    __privateSet(this, _currentMutation, __privateGet(this, _client).getMutationCache().build(__privateGet(this, _client), this.options));\n    __privateGet(this, _currentMutation).addObserver(this);\n    return __privateGet(this, _currentMutation).execute(variables);\n  }\n};\n_client = new WeakMap();\n_currentResult = new WeakMap();\n_currentMutation = new WeakMap();\n_mutateOptions = new WeakMap();\n_MutationObserver_instances = new WeakSet();\nupdateResult_fn = function() {\n  var _a;\n  const state = ((_a = __privateGet(this, _currentMutation)) == null ? void 0 : _a.state) ?? getDefaultState();\n  __privateSet(this, _currentResult, {\n    ...state,\n    isPending: state.status === \"pending\",\n    isSuccess: state.status === \"success\",\n    isError: state.status === \"error\",\n    isIdle: state.status === \"idle\",\n    mutate: this.mutate,\n    reset: this.reset\n  });\n};\nnotify_fn = function(action) {\n  notifyManager.batch(() => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    if (__privateGet(this, _mutateOptions) && this.hasListeners()) {\n      const variables = __privateGet(this, _currentResult).variables;\n      const context = __privateGet(this, _currentResult).context;\n      if ((action == null ? void 0 : action.type) === \"success\") {\n        (_b = (_a = __privateGet(this, _mutateOptions)).onSuccess) == null ? void 0 : _b.call(_a, action.data, variables, context);\n        (_d = (_c = __privateGet(this, _mutateOptions)).onSettled) == null ? void 0 : _d.call(_c, action.data, null, variables, context);\n      } else if ((action == null ? void 0 : action.type) === \"error\") {\n        (_f = (_e = __privateGet(this, _mutateOptions)).onError) == null ? void 0 : _f.call(_e, action.error, variables, context);\n        (_h = (_g = __privateGet(this, _mutateOptions)).onSettled) == null ? void 0 : _h.call(\n          _g,\n          void 0,\n          action.error,\n          variables,\n          context\n        );\n      }\n    }\n    this.listeners.forEach((listener) => {\n      listener(__privateGet(this, _currentResult));\n    });\n  });\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}