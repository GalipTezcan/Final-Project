{"ast":null,"code":"import { __privateAdd, __privateGet, __privateSet, __privateWrapper } from \"./chunk-PXG64RU4.js\";\n\n// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar _mutations, _scopes, _mutationId;\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    __privateAdd(this, _mutations);\n    __privateAdd(this, _scopes);\n    __privateAdd(this, _mutationId);\n    __privateSet(this, _mutations, /* @__PURE__ */new Set());\n    __privateSet(this, _scopes, /* @__PURE__ */new Map());\n    __privateSet(this, _mutationId, 0);\n  }\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++__privateWrapper(this, _mutationId)._,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    __privateGet(this, _mutations).add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = __privateGet(this, _scopes).get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        __privateGet(this, _scopes).set(scope, [mutation]);\n      }\n    }\n    this.notify({\n      type: \"added\",\n      mutation\n    });\n  }\n  remove(mutation) {\n    if (__privateGet(this, _mutations).delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = __privateGet(this, _scopes).get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            __privateGet(this, _scopes).delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({\n      type: \"removed\",\n      mutation\n    });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = __privateGet(this, _scopes).get(scope);\n      const firstPendingMutation = mutationsWithSameScope == null ? void 0 : mutationsWithSameScope.find(m => m.state.status === \"pending\");\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    var _a;\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = (_a = __privateGet(this, _scopes).get(scope)) == null ? void 0 : _a.find(m => m !== mutation && m.state.isPaused);\n      return (foundMutation == null ? void 0 : foundMutation.continue()) ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      __privateGet(this, _mutations).forEach(mutation => {\n        this.notify({\n          type: \"removed\",\n          mutation\n        });\n      });\n      __privateGet(this, _mutations).clear();\n      __privateGet(this, _scopes).clear();\n    });\n  }\n  getAll() {\n    return Array.from(__privateGet(this, _mutations));\n  }\n  find(filters) {\n    const defaultedFilters = {\n      exact: true,\n      ...filters\n    };\n    return this.getAll().find(mutation => matchMutation(defaultedFilters, mutation));\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter(mutation => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter(x => x.state.isPaused);\n    return notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(noop))));\n  }\n};\n_mutations = new WeakMap();\n_scopes = new WeakMap();\n_mutationId = new WeakMap();\nfunction scopeFor(mutation) {\n  var _a;\n  return (_a = mutation.options.scope) == null ? void 0 : _a.id;\n}\nexport { MutationCache };","map":{"version":3,"names":["__privateAdd","__privateGet","__privateSet","__privateWrapper","notifyManager","Mutation","matchMutation","noop","Subscribable","_mutations","_scopes","_mutationId","MutationCache","constructor","config","Set","Map","build","client","options","state","mutation","mutationCache","mutationId","_","defaultMutationOptions","add","scope","scopeFor","scopedMutations","get","push","set","notify","type","remove","delete","length","index","indexOf","splice","canRun","mutationsWithSameScope","firstPendingMutation","find","m","status","runNext","_a","foundMutation","isPaused","continue","Promise","resolve","clear","batch","forEach","getAll","Array","from","filters","defaultedFilters","exact","findAll","filter","event","listeners","listener","resumePausedMutations","pausedMutations","x","all","map","catch","WeakMap","id"],"sources":["/Users/bts-ank-0608/Final-Project/frontend/node_modules/@tanstack/query-core/build/legacy/mutationCache.js"],"sourcesContent":["import {\n  __privateAdd,\n  __privateGet,\n  __privateSet,\n  __privateWrapper\n} from \"./chunk-PXG64RU4.js\";\n\n// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar _mutations, _scopes, _mutationId;\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    __privateAdd(this, _mutations);\n    __privateAdd(this, _scopes);\n    __privateAdd(this, _mutationId);\n    __privateSet(this, _mutations, /* @__PURE__ */ new Set());\n    __privateSet(this, _scopes, /* @__PURE__ */ new Map());\n    __privateSet(this, _mutationId, 0);\n  }\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++__privateWrapper(this, _mutationId)._,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    __privateGet(this, _mutations).add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = __privateGet(this, _scopes).get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        __privateGet(this, _scopes).set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (__privateGet(this, _mutations).delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = __privateGet(this, _scopes).get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            __privateGet(this, _scopes).delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = __privateGet(this, _scopes).get(scope);\n      const firstPendingMutation = mutationsWithSameScope == null ? void 0 : mutationsWithSameScope.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    var _a;\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = (_a = __privateGet(this, _scopes).get(scope)) == null ? void 0 : _a.find((m) => m !== mutation && m.state.isPaused);\n      return (foundMutation == null ? void 0 : foundMutation.continue()) ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      __privateGet(this, _mutations).forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      __privateGet(this, _mutations).clear();\n      __privateGet(this, _scopes).clear();\n    });\n  }\n  getAll() {\n    return Array.from(__privateGet(this, _mutations));\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\n_mutations = new WeakMap();\n_scopes = new WeakMap();\n_mutationId = new WeakMap();\nfunction scopeFor(mutation) {\n  var _a;\n  return (_a = mutation.options.scope) == null ? void 0 : _a.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}