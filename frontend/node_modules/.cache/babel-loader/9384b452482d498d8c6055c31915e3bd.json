{"ast":null,"code":"import \"./chunk-PXG64RU4.js\";\n\n// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = cancelOptions => {\n    var _a;\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      (_a = config.abort) == null ? void 0 : _a.call(config);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = value => {\n    var _a;\n    if (!isResolved) {\n      isResolved = true;\n      (_a = config.onSuccess) == null ? void 0 : _a.call(config, value);\n      continueFn == null ? void 0 : continueFn();\n      thenable.resolve(value);\n    }\n  };\n  const reject = value => {\n    var _a;\n    if (!isResolved) {\n      isResolved = true;\n      (_a = config.onError) == null ? void 0 : _a.call(config, value);\n      continueFn == null ? void 0 : continueFn();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise(continueResolve => {\n      var _a;\n      continueFn = value => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      (_a = config.onPause) == null ? void 0 : _a.call(config);\n    }).then(() => {\n      var _a;\n      continueFn = void 0;\n      if (!isResolved) {\n        (_a = config.onContinue) == null ? void 0 : _a.call(config);\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _a;\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      (_a = config.onFail) == null ? void 0 : _a.call(config, failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn == null ? void 0 : continueFn();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport { CancelledError, canFetch, createRetryer, isCancelledError };","map":{"version":3,"names":["focusManager","onlineManager","pendingThenable","isServer","sleep","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","isOnline","CancelledError","Error","constructor","options","revert","silent","isCancelledError","value","createRetryer","config","isRetryCancelled","isResolved","continueFn","thenable","cancel","cancelOptions","_a","reject","abort","call","cancelRetry","continueRetry","canContinue","isFocused","canRun","canStart","resolve","onSuccess","onError","pause","Promise","continueResolve","onPause","then","onContinue","run","promiseOrValue","initialPromise","fn","error","catch","retry","retryDelay","delay","shouldRetry","onFail","promise","continue","start"],"sources":["/Users/bts-ank-0608/Final-Project/frontend/node_modules/@tanstack/query-core/build/legacy/retryer.js"],"sourcesContent":["import \"./chunk-PXG64RU4.js\";\n\n// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    var _a;\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      (_a = config.abort) == null ? void 0 : _a.call(config);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    var _a;\n    if (!isResolved) {\n      isResolved = true;\n      (_a = config.onSuccess) == null ? void 0 : _a.call(config, value);\n      continueFn == null ? void 0 : continueFn();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    var _a;\n    if (!isResolved) {\n      isResolved = true;\n      (_a = config.onError) == null ? void 0 : _a.call(config, value);\n      continueFn == null ? void 0 : continueFn();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      var _a;\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      (_a = config.onPause) == null ? void 0 : _a.call(config);\n    }).then(() => {\n      var _a;\n      continueFn = void 0;\n      if (!isResolved) {\n        (_a = config.onContinue) == null ? void 0 : _a.call(config);\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      var _a;\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      (_a = config.onFail) == null ? void 0 : _a.call(config, failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn == null ? void 0 : continueFn();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}