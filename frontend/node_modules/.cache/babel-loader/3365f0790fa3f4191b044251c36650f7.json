{"ast":null,"code":"import { __privateAdd, __privateGet, __privateSet } from \"./chunk-PXG64RU4.js\";\n\n// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar _focused, _cleanup, _setup;\nvar FocusManager = class extends Subscribable {\n  constructor() {\n    super();\n    __privateAdd(this, _focused);\n    __privateAdd(this, _cleanup);\n    __privateAdd(this, _setup);\n    __privateSet(this, _setup, onFocus => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    });\n  }\n  onSubscribe() {\n    if (!__privateGet(this, _cleanup)) {\n      this.setEventListener(__privateGet(this, _setup));\n    }\n  }\n  onUnsubscribe() {\n    var _a;\n    if (!this.hasListeners()) {\n      (_a = __privateGet(this, _cleanup)) == null ? void 0 : _a.call(this);\n      __privateSet(this, _cleanup, void 0);\n    }\n  }\n  setEventListener(setup) {\n    var _a;\n    __privateSet(this, _setup, setup);\n    (_a = __privateGet(this, _cleanup)) == null ? void 0 : _a.call(this);\n    __privateSet(this, _cleanup, setup(focused => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    }));\n  }\n  setFocused(focused) {\n    const changed = __privateGet(this, _focused) !== focused;\n    if (changed) {\n      __privateSet(this, _focused, focused);\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach(listener => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    var _a;\n    if (typeof __privateGet(this, _focused) === \"boolean\") {\n      return __privateGet(this, _focused);\n    }\n    return ((_a = globalThis.document) == null ? void 0 : _a.visibilityState) !== \"hidden\";\n  }\n};\n_focused = new WeakMap();\n_cleanup = new WeakMap();\n_setup = new WeakMap();\nvar focusManager = new FocusManager();\nexport { FocusManager, focusManager };","map":{"version":3,"names":["Subscribable","isServer","_focused","_cleanup","_setup","FocusManager","constructor","__privateAdd","__privateSet","onFocus","window","addEventListener","listener","removeEventListener","onSubscribe","__privateGet","setEventListener","onUnsubscribe","_a","hasListeners","call","setup","focused","setFocused","changed","isFocused","listeners","forEach","globalThis","document","visibilityState","WeakMap","focusManager"],"sources":["../../src/focusManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n"],"mappings":";;;AAAA,SAASA,YAAA,QAAoB;AAC7B,SAASC,QAAA,QAAgB;AADzB,IAAAC,QAAA,EAAAC,QAAA,EAAAC,MAAA;AASO,IAAMC,YAAA,GAAN,cAA2BL,YAAA,CAAuB;EAMvDM,YAAA,EAAc;IACZ,MAAM;IANRC,YAAA,OAAAL,QAAA;IACAK,YAAA,OAAAJ,QAAA;IAEAI,YAAA,OAAAH,MAAA;IAIEI,YAAA,OAAKJ,MAAA,EAAUK,OAAA,IAAY;MAGzB,IAAI,CAACR,QAAA,IAAYS,MAAA,CAAOC,gBAAA,EAAkB;QACxC,MAAMC,QAAA,GAAWA,CAAA,KAAMH,OAAA,CAAQ;QAE/BC,MAAA,CAAOC,gBAAA,CAAiB,oBAAoBC,QAAA,EAAU,KAAK;QAE3D,OAAO,MAAM;UAEXF,MAAA,CAAOG,mBAAA,CAAoB,oBAAoBD,QAAQ;QACzD;MACF;MACA;IACF;EACF;EAEUE,YAAA,EAAoB;IAC5B,IAAI,CAACC,YAAA,OAAKZ,QAAA,GAAU;MAClB,KAAKa,gBAAA,CAAiBD,YAAA,OAAKX,MAAA,CAAM;IACnC;EACF;EAEUa,cAAA,EAAgB;IAxC5B,IAAAC,EAAA;IAyCI,IAAI,CAAC,KAAKC,YAAA,CAAa,GAAG;MACxB,CAAAD,EAAA,GAAAH,YAAA,OAAKZ,QAAA,MAAL,gBAAAe,EAAA,CAAAE,IAAA;MACAZ,YAAA,OAAKL,QAAA,EAAW;IAClB;EACF;EAEAa,iBAAiBK,KAAA,EAAsB;IA/CzC,IAAAH,EAAA;IAgDIV,YAAA,OAAKJ,MAAA,EAASiB,KAAA;IACd,CAAAH,EAAA,GAAAH,YAAA,OAAKZ,QAAA,MAAL,gBAAAe,EAAA,CAAAE,IAAA;IACAZ,YAAA,OAAKL,QAAA,EAAWkB,KAAA,CAAOC,OAAA,IAAY;MACjC,IAAI,OAAOA,OAAA,KAAY,WAAW;QAChC,KAAKC,UAAA,CAAWD,OAAO;MACzB,OAAO;QACL,KAAKb,OAAA,CAAQ;MACf;IACF,CAAC;EACH;EAEAc,WAAWD,OAAA,EAAyB;IAClC,MAAME,OAAA,GAAUT,YAAA,OAAKb,QAAA,MAAaoB,OAAA;IAClC,IAAIE,OAAA,EAAS;MACXhB,YAAA,OAAKN,QAAA,EAAWoB,OAAA;MAChB,KAAKb,OAAA,CAAQ;IACf;EACF;EAEAA,QAAA,EAAgB;IACd,MAAMgB,SAAA,GAAY,KAAKA,SAAA,CAAU;IACjC,KAAKC,SAAA,CAAUC,OAAA,CAASf,QAAA,IAAa;MACnCA,QAAA,CAASa,SAAS;IACpB,CAAC;EACH;EAEAA,UAAA,EAAqB;IA1EvB,IAAAP,EAAA;IA2EI,IAAI,OAAOH,YAAA,OAAKb,QAAA,MAAa,WAAW;MACtC,OAAOa,YAAA,OAAKb,QAAA;IACd;IAIA,SAAOgB,EAAA,GAAAU,UAAA,CAAWC,QAAA,KAAX,gBAAAX,EAAA,CAAqBY,eAAA,MAAoB;EAClD;AACF;AAzEE5B,QAAA,OAAA6B,OAAA;AACA5B,QAAA,OAAA4B,OAAA;AAEA3B,MAAA,OAAA2B,OAAA;AAwEK,IAAMC,YAAA,GAAe,IAAI3B,YAAA,CAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}